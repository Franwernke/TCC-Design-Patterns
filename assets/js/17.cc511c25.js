(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{293:function(a,o,e){"use strict";e.r(o);var s=e(14),t=Object(s.a)({},(function(){var a=this,o=a._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[o("p",[o("RouterLink",{attrs:{to:"/docs/"}},[a._v("< Voltar")])],1),a._v(" "),o("h2",{attrs:{id:"prototype"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#prototype"}},[a._v("#")]),a._v(" Prototype")]),a._v(" "),o("h3",{attrs:{id:"problema"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#problema"}},[a._v("#")]),a._v(" Problema")]),a._v(" "),o("p",[a._v("Ao criarmos instâncias de uma classe, atribuímos a elas valores para cada um dos atributos. Se pensamos em objetos simples de serem criados, é comum instânciarmos várias vezes a classe e atribuirmos manualmente os atributos. COntudo, em alguns casos, a instanciação de um objeto é algo trabalhoso e pode gerar diferentes erros no caminho.")]),a._v(" "),o("h3",{attrs:{id:"exemplo"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#exemplo"}},[a._v("#")]),a._v(" Exemplo")]),a._v(" "),o("p",[a._v("Você está implementando um sistema e precisa testar uma classe. Para cada caso de teste, você precisará instânciar a classe que quer testar e realizar alguns processos para certificar que ela se comporta da forma desejada. Porém, se a classe que você precisa testar é particularmente complexa, cada caso de teste demorará um pouco para instanciar a classe. Dessa forma, executar esses testes se torna demorado, oque pode dificultar a produção do código.")]),a._v(" "),o("h3",{attrs:{id:"contexto"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#contexto"}},[a._v("#")]),a._v(" Contexto")]),a._v(" "),o("ul",[o("li",[a._v("Temos uma classe que tem um processo de instanciação complexo")]),a._v(" "),o("li",[a._v("Precisamos copiar um objeto de forma exata com todos os seus atributos")])]),a._v(" "),o("h3",{attrs:{id:"solucao"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#solucao"}},[a._v("#")]),a._v(" Solução")]),a._v(" "),o("p",[a._v("O padrão Prototype é usado para copiarmos objetos de forma idêntica, com todos os atributos iguais. Esse padrão utiliza uma segunda classe que tem um método que conhece todos os atributos da classe a ser copiada e copia os atributos do objeto passado para um novo objeto que é retornado. Dessa forma, podemos resolver o problema do exemplo criando uma classe Prototype que copia todos os atributos da classe sendo testada para um novo objeto. Assim, podemos alterar o objeto clonado para todos os casos de teste sem perda do estado original da instância.")]),a._v(" "),o("h3",{attrs:{id:"diagrama"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#diagrama"}},[a._v("#")]),a._v(" Diagrama")]),a._v(" "),o("h3",{attrs:{id:"implementacao"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#implementacao"}},[a._v("#")]),a._v(" Implementação")])])}),[],!1,null,null,null);o.default=t.exports}}]);